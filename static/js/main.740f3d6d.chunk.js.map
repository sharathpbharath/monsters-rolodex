{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.componet.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","SearchBox","placeholder","handlechange","type","onChange","App","state","searchFeild","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OACpB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,cACTC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACH,6BAAKL,EAAMI,QAAQE,WCJVC,EAAW,SAACP,GAErB,OAAO,qBAAKC,UAAU,YAAf,SAEDD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJhBK,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAYC,EAAf,EAAeA,aAAf,OACrB,uBAAOX,UAAU,SACjBY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCCG,E,kDAnCb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTR,SAAS,GACTS,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAGvC,WAAU,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZQ,EAAmBjB,EAASkB,QAAO,SAAAtB,GAAO,OAAIA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYY,wBACpG,OACE,sBAAK5B,UAAU,MAAf,UAEE,kDAEA,cAAC,EAAD,CACAU,YAAY,kBACZC,aAAc,SAAAkB,GAAC,OAAG,EAAKP,SAAS,CAACN,YAAYa,EAAEC,OAAOC,WAGtD,cAAC,EAAD,CAAUxB,SAAUiB,W,GA7BVQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.740f3d6d.chunk.js","sourcesContent":["import react from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props)=>(\r\n<div className='card-container'>\r\n    <img alt='robo images' \r\n    src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n    <h1>{props.monster.name}</h1>\r\n</div>\r\n);","import React from \"react\";\r\nimport './card-list.styles.css';\r\nimport { Card } from \"../card/card.component\";\r\nexport const CardList = (props) => {\r\n    \r\n    return <div className='card-list'>\r\n        {\r\n          props.monsters.map(monster => \r\n          <Card key={monster.id} monster={monster} />)\r\n        }\r\n    </div>;\r\n};","import React from \"react\";\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ( {placeholder,handlechange} ) => (\r\n    <input className='search'\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handlechange}/>\r\n)","import './App.css';\nimport { CardList } from './components/card-list/card-list.componet';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state={\n      monsters:[  ],\n      searchFeild:''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n\n  render() {\n    const { monsters, searchFeild } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchFeild.toLocaleLowerCase()))\n    return (\n      <div className=\"App\">\n        \n        <h2>Monsters Rolodex</h2>\n\n        <SearchBox \n        placeholder='search monsters' \n        handlechange={e=> this.setState({searchFeild:e.target.value})}\n        />\n\n        <CardList monsters={filteredMonsters} />\n \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}